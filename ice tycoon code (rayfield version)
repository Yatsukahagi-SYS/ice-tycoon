local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "❄️ Ice Tycoon",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "❄️ Ice Tycoon Script Hub",
   LoadingSubtitle = "by Yatsukahagi",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

--Values
_G.AutoTapTowerButton = true
_G.AutoPrestige = true

--Functions
function AutoTapTowerButton()
local freezing = workspace.Tycoons.Tycoon2.Bought:WaitForChild("Freezing")
local towerdisplay = freezing:WaitForChild("TowerDisplay")
local button = towerdisplay:WaitForChild("Button")
local cd = button:WaitForChild("ClickDetector")
    while _G.AutoTapTowerButton == true do
     if towerdisplay:WaitForChild("Active").Value == false then
        fireclickdetector(cd)
    end
        task.wait(0.1)
    end
end

function AutoPrestige()
local player = game.Players.LocalPlayer
local buttonPath = player:WaitForChild("PlayerGui"):WaitForChild("GUI"):WaitForChild("PrestigeConfirm").Yes
    while _G.AutoPrestige == true do
    task.wait(1)
        if buttonPath and buttonPath:IsA("TextButton") then
            firesignal(buttonPath.MouseButton1Click)
        end
    end
end

--Tabs
local MainTab = Window:CreateTab("Main", 4483362458) -- Title, Image

--Sections
local Section = MainTab:CreateSection("Main")

--Toggles
local Toggle = MainTab:CreateToggle({
   Name = "Auto Start Tower",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
		_G.AutoTapTowerButton = Value
        AutoTapTowerButton()
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Auto Prestige",
   CurrentValue = false,
   Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
		_G.AutoPrestige = Value
        AutoPrestige()
   end,
})
